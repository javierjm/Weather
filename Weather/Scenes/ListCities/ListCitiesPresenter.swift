//
//  ListCitiesPresenter.swift
//  Weather
//
//  Created by Javier Jara on 11/15/17.
//  Copyright (c) 2017 jjsoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListCitiesPresentationLogic {
    func presentCities(response: ListCities.FetchCities.Response)
    func presentError(response: Error)
}

class ListCitiesPresenter: ListCitiesPresentationLogic
{
    weak var viewController: ListCitiesDisplayLogic?
    
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.dateStyle = .short
        dateFormatter.timeStyle = .short
        return dateFormatter
    }()
    
    func presentCities(response: ListCities.FetchCities.Response) {
        
        let citiesViewModel = response.cities.map{ListCities.FetchCities.ViewModel.DisplayedCity(cityId: $0.cityId, name: $0.name, temperature: "\($0.main.temp)Â°", weatherImageName: self.iconImageNameForCode(code: $0.weather?.code))}
        let dateNow =  "Last Updated: \(dateFormatter.string(from: Date()))"
        let viewModel = ListCities.FetchCities.ViewModel(displayedCities: citiesViewModel, lastUpdate:dateNow)
        viewController?.displayCities(viewModel: viewModel)
    }
    
    func presentError(response: Error) {
        
    }
    
    func iconImageNameForCode(code: Int?) -> String{
        if let code = code {
            switch code {
            case 800:
                return "sunny"
            case 801 ..< 805:
                return "sun-cloudy"
            case 500 ..< 502:
                return "sun-rainy"
            case 502 ..< 532:
                return "rainy"
            case 905:
                return "windy"
            default:
                return "sunny"
            }
        }
        return ""
    }
    
}
