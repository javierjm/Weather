//
//  ListCitiesPresenter.swift
//  Weather
//
//  Created by Javier Jara on 11/15/17.
//  Copyright (c) 2017 jjsoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListCitiesPresentationLogic {
    func presentCities(response: ListCities.FetchCities.Response)
    func presentError(error: CitiesStoreError)
}

class ListCitiesPresenter: ListCitiesPresentationLogic
{
    weak var viewController: ListCitiesDisplayLogic?
    
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.dateStyle = .short
        dateFormatter.timeStyle = .medium
        return dateFormatter
    }()
    
    func presentCities(response: ListCities.FetchCities.Response) {
        
        let citiesViewModel = response.cities.map{ListCities.FetchCities.ViewModel.DisplayedCity(cityId: $0.cityId,
                                                                                                 name: $0.name,
                                                                                                 temperature: "\($0.main.temp)Â°", weatherImageName: $0.iconImageNameForCode() )}
        let dateNow =  "Last Updated: \(dateFormatter.string(from: Date()))"
        let viewModel = ListCities.FetchCities.ViewModel(displayedCities: citiesViewModel, lastUpdate:dateNow)
        viewController?.displayCities(viewModel: viewModel)
    }
    
    func presentError(error: CitiesStoreError) {
        
        switch(error) {
            case .CannotFetch(let message):
                let isConnectionDown = message.contains("offline")
                viewController?.presentError(errorDescription: message, customView: isConnectionDown)
            case .CannotFindLocation(let message):
                viewController?.presentError(errorDescription: message, customView: false)
        }
        
    }
}
