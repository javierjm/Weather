//
//  ListCitiesInteractor.swift
//  Weather
//
//  Created by Javier Jara on 11/15/17.
//  Copyright (c) 2017 jjsoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListCitiesBusinessLogic {
  func fetchCities(request: ListCities.FetchCities.Request)
}

protocol ListCitiesDataStore {
  //var name: String { get set }
}

class ListCitiesInteractor: ListCitiesBusinessLogic, ListCitiesDataStore {
    var presenter: ListCitiesPresentationLogic?
    var worker: ListCitiesWorker?
    
    func fetchCities(request: ListCities.FetchCities.Request) {
        worker = ListCitiesWorker(citiesStore: WeatherAPI())
        let coordinates = findCoordinates()
        worker?.fetchCities(lat: coordinates.lat, lon: coordinates.lon, completionHandler: { (result: CitiesStoreResult<[City]>) in
            switch(result){
                case .Failure(let error):
                    print("There was an error fetching cities: \(error.localizedDescription)")
                    // Call presenter with error description
                    self.presenter?.presentError(response: error)
                case .Success(let results):
                    print("Fetched proprely these cities: \(results.count)")
                    let response = ListCities.FetchCities.Response(cities: results)
                    self.presenter?.presentCities(response: response)
            }
        })
    }
    
    func findCoordinates() ->(lat: String, lon: String) {
        return ("â€Ž9.9", "-84")
    }
}
